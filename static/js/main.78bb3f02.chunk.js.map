{"version":3,"sources":["Components/Navbar/Navbar.js","Components/IntroBackground/IntroBackground2.js","Components/IntroCard/IntroCard.js","Components/CardAboutMe/CardAboutMe.js","Components/Skillbar/Skillbar.js","Components/CardExperience/CardExperience.js","Components/CardOffer/CardOffer.js","Components/CardDemo/CardDemo.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["Navbar","props","useState","open","setOpen","className","setClassName","AppBar","position","Toolbar","Typography","variant","key","Button","color","href","IconButton","edge","aria-label","aria-controls","aria-haspopup","onClick","event","Boolean","Icon","IntroBackground2","useEffect","document","querySelectorAll","class","style","backgroundColor","bgColor","IconText","icon","component","text","IconTextList","IconList","Facebook","fontSize","Twitter","LinkedIn","GitHub","IntroCard","Card","Box","CardMedia","image","varaint","CardAboutMe","myStyle","iconColor","CardContent","iconClassName","title","body","Skillbar","MyLinearProgress","withStyles","root","lighten","borderRadius","height","maxWidth","bar","LinearProgress","skillName","skillValue","value","ExpContent","EduContent","CardExperience","currentContent","setCurrentContent","handleClick","content","ButtonGroup","size","e","CardOffer","myColor1","setMyColor1","myColor2","setMyColor2","classes","makeStyles","background","WebkitBackgroundClip","WebkitTextFillColor","marginTop","myStyles","onMouseEnter","color1","color2","onMouseLeave","Transition","React","forwardRef","ref","Slide","direction","CardDemo","handleClickClose","gradientColor1","gradientColor2","dialogRoot","overlayButton","backgroundImage","opacity","appBar","modalTitle","fontWeight","modalClient","fontFamily","textAlign","modalDescription","githubButton","useStyles","imageTitle","Dialog","fullScreen","onClose","TransitionComponent","client","description","modalImages","map","paddingTop","data-secondcolor","viewWebsiteButton","endIcon","url","Divider","aboutProject","technologies","name","index","githubLink","subtitle","App","id","action","method","TextField","placeholder","label","inputProps","multiline","rows","type","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.78bb3f02.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Navbar.css';\r\nimport {AppBar, Toolbar, IconButton, Icon, Typography, Button} from '@material-ui/core/';\r\n\r\n//This component creates a navbar that collapses on screens smaller than 769px\r\n/*\r\nPROPS LIST:\r\n    none\r\n*/\r\nconst Navbar = (props) => {\r\n    //this is a boolean state that keeps track of whether the smaller-screen menu is open or not\r\n    const [open, setOpen] = useState(false);\r\n    //this is a string state that stores a class name for the list of links\r\n    const [className, setClassName] = useState(null);\r\n\r\n    //this function runs when the MenuIcon is pressed on smaller screen sizes\r\n    const handleClick = (event) => {\r\n        //if the state of the navbar is already open,\r\n        if (Boolean(open)) {\r\n            //remove the class name that allows the nav list to be displayed\r\n            setClassName(null);\r\n            //toggle the open state to false\r\n            setOpen(false);\r\n        }\r\n        //otherwise if the navbar is closed\r\n        else {\r\n            //give the nav list the class name that allows it to be displayed\r\n            setClassName(\"show\");\r\n            //toggle the open state to true\r\n            setOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AppBar position=\"static\" className=\"navbar\">\r\n            <Toolbar>\r\n                <Typography variant=\"h5\" className=\"menuTitle\">\r\n                    Nathaniel Grimsley\r\n                </Typography>\r\n                <ul className={`navbar__link-list ${className}`}>\r\n                    <li key=\"1\"><Button color=\"inherit\"><a href=\"#Home\">Home</a></Button></li>\r\n                    <li key=\"2\"><Button color=\"inherit\"><a href=\"#About\">About</a></Button></li>\r\n                    <li key=\"3\"><Button color=\"inherit\"><a href=\"#Experience\">Experience</a></Button></li>\r\n                    <li key=\"4\"><Button color=\"inherit\"><a href=\"#Portfolio\">Portfolio</a></Button></li>\r\n                    <li key=\"5\"><Button color=\"inherit\"><a href=\"#Contact\">Contact</a></Button></li>\r\n                </ul>\r\n                <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\" aria-controls=\"menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                    <Icon>menu</Icon>\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport './IntroBackground2.css';\r\nimport anime from 'animejs';\r\nimport {makeStyles, Card} from '@material-ui/core';\r\n\r\n//These are the five block components in the background\r\n/*\r\nPROPS: \r\n    color: STRING the color of the block\r\n*/\r\nconst Block = (props) => {\r\n    //This state stores the color of the block's background\r\n    let color = 'rgba(0, 0, 0, 0)';\r\n    //Depending on the color prop, this will change the background color of the block.\r\n    switch(props.color) {\r\n        case 'pink':\r\n            color = '#F15BB5';\r\n            break;\r\n        case 'purple':\r\n            color = '#985DE5';\r\n            break;\r\n        case 'blue':\r\n            color = '#00BBF9';\r\n            break;\r\n        case 'green':\r\n            color = '#00F5D4';\r\n            break;\r\n        case 'yellow':\r\n            color = '#FEE440';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const useStyles = makeStyles ({\r\n        root: {\r\n            backgroundColor: color,\r\n            height: '17.5vw',\r\n            width: '17.5vw',\r\n            position: 'relative',\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Card className={`${classes.root} ${props.color}`}></Card>;\r\n}\r\n\r\n\r\n\r\nconst IntroBackground2 = (props) => {\r\n    useEffect(() => {\r\n        var pink = document.querySelectorAll('.pink');\r\n        /*anime ({\r\n            targets: pink,\r\n            translateY: [{value: '-50vh', easing: 'easeOutSine', duration: 500},\r\n                         {value: 0, easing: 'easeOutSine', duration: 500},\r\n                         {value: '-42vh', easing: 'easeOutSine', duration: 500},\r\n                         {value: 0, easing: 'easeOutSine', duration: 500},\r\n                         {value: '-34vh', easing: 'easeOutSine', duration: 500},\r\n                         {value: 0, easing: 'easeOutSine', duration: 500},\r\n                         {value: '-26vh', easing: 'easeOutSine', duration: 500},\r\n                         {value: 0, easing: 'easeOutSine', duration: 500},\r\n                         {value: -'18vh', easing: 'easeOutSine', duration: 500},\r\n                         {value: 0, easing: 'easeOutSine', duration: 500},\r\n                         {value: '-10vh', easing: 'easeOutSine', duration: 500},\r\n                         {value: 0, easing: 'easeOutSine', duration: 500},],\r\n            loop: true,\r\n            direction: 'alternate',\r\n            translateX: {value: '82.5vw', easing: 'easeOutSine', duration: 6000},\r\n        });*/\r\n    });\r\n\r\n    return (\r\n        <div className={props.class} style={{backgroundColor: props.bgColor,}}>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n//This export statement exports IntroBackground2 for use in other elements.\r\n//HOW TO USE:  import IntroBackground2 from 'INTROBACKGROUND2.JS LOCATION';\r\nexport default IntroBackground2;","import React from 'react';\r\nimport {Card, CardMedia, Box, Typography, Icon, IconButton} from '@material-ui/core/';\r\nimport {Facebook, Twitter, LinkedIn, GitHub} from '@material-ui/icons/';\r\nimport './IntroCard.css';\r\n\r\n//a component that holds an icon and some text in a row\r\n/*\r\nPROPS LIST:\r\n    icon: the Material icon to be rendered\r\n    text: the text to be rendered next to the icon\r\n*/\r\nexport const IconText = (props) => {\r\n    return (\r\n        <div className=\"iconText\">\r\n            <Icon>{props.icon}</Icon>\r\n            <Typography component=\"p\" variant=\"body1\">{props.text}</Typography>\r\n        </div>\r\n    );\r\n}\r\n\r\n//a component holding a list of IconText components\r\nconst IconTextList = (props) => {\r\n    return (\r\n        <div className=\"iconTextList\">\r\n            <IconText icon=\"phone\" text=\"1(989)217-6087\"></IconText>\r\n            <IconText icon=\"email\" text=\"grimsleynate@gmail.com\"></IconText>\r\n            <IconText icon=\"room\" text=\"West Branch, Michigan\"></IconText> \r\n        </div>\r\n    )\r\n}\r\n\r\n//a component holding a list of five social media icons\r\n/*\r\nPROPS LIST:\r\n    none\r\n*/\r\nexport const IconList = (props) => {\r\n    return (\r\n        <div className=\"iconList\">\r\n            <ul className=\"iconList__row1\">\r\n                <li>\r\n                    <IconButton href=\"https://www.facebook.com/nathaniel.grimsley\" className=\"facebook\"><Facebook fontSize=\"large\"></Facebook></IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton href=\"https://www.twitter.com/GrimsleyNate\" className=\"twitter\"><Twitter fontSize=\"large\"></Twitter></IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton href=\"https://www.linkedin.com/in/nathaniel-grimsley-40b19bb2/\" className=\"linkedin\"><LinkedIn fontSize=\"large\"></LinkedIn></IconButton>\r\n                </li>\r\n            </ul>\r\n            <ul className=\"iconList__row2\">\r\n                <li>\r\n                    <IconButton href=\"https://www.bitbucket.org/grimsleynate\" className=\"bitbucket\"><Icon className=\"fab fa-bitbucket\" fontSize=\"large\"></Icon></IconButton>\r\n                </li>\r\n                <li>\r\n                    <IconButton href=\"https://www.github.com/grimsleynate/\" className=\"github\"><GitHub fontSize=\"large\"></GitHub></IconButton>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n//A component holding a picture and descriptive text relating to a person's portfolio\r\n/*\r\nPROPS LIST:\r\n    none\r\n*/\r\nexport const IntroCard = (props) => {\r\n    return (\r\n        <Card className=\"introCard\">\r\n            <Box>\r\n                <CardMedia className=\"introCard__img\" component=\"span\" image=\"img/personal.jpg\"></CardMedia>\r\n            </Box>\r\n            <Box className=\"introCard__textContainer\">\r\n                <Typography component=\"h4\" variant=\"subtitle1\"> Welcome to my portfolio, I am</Typography>\r\n                <Typography component=\"h1\" varaint=\"h1\"> Nathaniel Grimsley</Typography>\r\n                <Typography component=\"h3\" variant=\"caption\">Front-End Web Developer</Typography>\r\n                <Typography component=\"p\" variant=\"body1\" className=\"subParagraph\">I am a front-end web developer with a focus on React.  I have experience working\r\n                                in an Agile environment using the SCRUM framework.</Typography>\r\n                <div className=\"contactInfo\">\r\n                    <IconTextList></IconTextList>\r\n                    <IconList></IconList>       \r\n                </div>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './CardAboutMe.css';\r\nimport {Card, CardContent, Typography, Icon} from '@material-ui/core/';\r\n\r\n//this component is a card that holds an icon, a title, and a body of text.\r\n/*\r\nPROPS LIST:\r\n    iconColor: the color of the icon\r\n    iconClassName:  the class name for the icon. i.e.: 'fas fa-graduation-cap'\r\n    title:  the title for the card.\r\n    body:  the body of text to be rendered on the card.\r\n\r\nCLASS LIST:\r\n    root: aboutMe__root\r\n    icon: aboutMe__icon\r\n    title: aboutMe__title\r\n    body: aboutMe__body\r\n*/\r\nconst CardAboutMe = (props) => {\r\n    //this object stores the style rules for the icon\r\n    const myStyle = {\r\n        color: `var(--${props.iconColor})`\r\n    }\r\n\r\n    return (\r\n        <Card className=\"aboutMe__root\">\r\n            <CardContent>\r\n                <Icon className={`aboutMe__icon ${props.iconClassName}`} style={myStyle}></Icon>\r\n                <Typography component=\"h3\" className=\"aboutMe__title\">\r\n                    {props.title}\r\n                </Typography>\r\n                <Typography component=\"p\" className=\"aboutMe__body\">\r\n                    {props.body}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardAboutMe;","import React from 'react';\r\nimport {Typography, LinearProgress} from '@material-ui/core/';\r\nimport './Skillbar.css';\r\nimport {lighten, makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\n/*\r\nPROPS: \r\n    color: The color of the skillbar background.  Options: 'pink', 'purple', 'blue', 'green', 'yellow'\r\n    skillName:  The name of the skill\r\n    skillValue:  A number that represents how much is known in that particular skill (out of 100)\r\n*/\r\n\r\nconst Skillbar = (props) => {\r\n\r\n    var color = '#FFF';\r\n\r\n    switch(props.color) {\r\n        case 'pink':\r\n            color = '#F15BB5';\r\n            break;\r\n        case 'purple':\r\n            color = '#9B5DE5';\r\n            break;\r\n        case 'blue':\r\n            color = '#00BBF9';\r\n            break;\r\n        case 'green':\r\n            color = '#00F5D4';\r\n            break;\r\n        case 'yellow':\r\n            color = '#FEE440';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    const MyLinearProgress = withStyles({\r\n        root: {\r\n            backgroundColor: lighten(color, 0.5),\r\n            borderRadius: '10px',\r\n            height: '10px',\r\n            maxWidth: '600px'\r\n        },\r\n        bar: {\r\n            backgroundColor: `var(--${props.color})`,\r\n            borderRadius: '10px'\r\n\r\n        }\r\n    })(LinearProgress);\r\n\r\n    return (\r\n        <div className=\"skillbar__root\">\r\n            <Typography component=\"h5\">{`${props.skillName} ${props.skillValue}%`}</Typography>\r\n            <MyLinearProgress variant=\"determinate\" value={props.skillValue}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skillbar;","import React, {useState} from 'react';\r\nimport './CardExperience.css';\r\nimport {Card, Typography, CardContent, Button, ButtonGroup} from '@material-ui/core';\r\n\r\n//this component holds the card with my Experience content on it\r\n/*\r\nPROPS LIST:\r\n    none\r\n*/\r\nconst ExpContent = (props) => {\r\n\r\n    return (\r\n        <Card className='expCard__root'>\r\n            <CardContent>\r\n                <div className='expCard__content-container'>\r\n                    <ul className=\"expCard__list-container\">\r\n                        {/*These are the list items.  each item contains:\r\n                            Company Title, Dates of Employment, Job Title, and the Job Location*/}\r\n                        <li className=\"expCard__listItem\">\r\n                            {/*This is the circle with a background you see on the list's seperating line*/}\r\n                            <div className=\"circleDivider\">\r\n                                <span className=\"span1\"></span>\r\n                                <span className=\"span2\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className=\"expCard__listItem-title\" component=\"h4\">Upwork</Typography>\r\n                                <Typography className=\"expCard__listItem-date\" component=\"p\">March 2018 to Present</Typography>\r\n                                <Typography className=\"expCard__listItem-jobTitle\" component=\"p\">Front End Web Developer</Typography>\r\n                                <Typography className=\"expCard__listItem-location\" component=\"p\">West Branch, Michigan</Typography>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"expCard__listItem\">\r\n                            <div className=\"circleDivider\">\r\n                                <span className=\"span1\"></span>\r\n                                <span className=\"span2\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className=\"expCard__listItem-title\" component=\"h4\">Deadhead Media</Typography>\r\n                                <Typography className=\"expCard__listItem-date\" component=\"p\">May 2018 to Present</Typography>\r\n                                <Typography className=\"expCard__listItem-jobTitle\" component=\"p\">Front End Web Developer</Typography>\r\n                                <Typography className=\"expCard__listItem-location\" component=\"p\">West Branch, Michigan</Typography>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"expCard__listItem\">\r\n                            <div className=\"circleDivider\">\r\n                                <span className=\"span1\"></span>\r\n                                <span className=\"span2\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className=\"expCard__listItem-title\" component=\"h4\">UAT Game Studios</Typography>\r\n                                <Typography className=\"expCard__listItem-date\" component=\"p\">August - November 2018</Typography>\r\n                                <Typography className=\"expCard__listItem-jobTitle\" component=\"p\">Team Lead</Typography>\r\n                                <Typography className=\"expCard__listItem-location\" component=\"p\">Tempe, Arizona</Typography>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n//this component holds the card with my Education content on it\r\n/*\r\nPROPS LIST:\r\n    none\r\n*/\r\nconst EduContent = (props) => {\r\n    return (\r\n        <Card className='eduCard__root'>\r\n            <CardContent>\r\n                <div className='eduCard__content-container'>\r\n                    <ul className=\"eduCard__list-container\">\r\n                    {/*These are the list items.  each item contains:\r\n                            College Name, Dates Attended, Major, and College Location*/}\r\n                        <li className=\"eduCard__listItem\">\r\n                            {/*This is the circle with a background you see on the list's seperating line*/}\r\n                            <div className=\"circleDivider\">\r\n                                <span className=\"span1\"></span>\r\n                                <span className=\"span2\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className=\"eduCard__listItem-title\" component=\"h4\">Alpena Community</Typography>\r\n                                <Typography className=\"eduCard__listItem-title\" component=\"h4\">College</Typography>\r\n                                <Typography className=\"eduCard__listItem-date\" component=\"p\">Sept 2007 - July 2009</Typography>\r\n                                <Typography className=\"eduCard__listItem-jobTitle\" component=\"p\">General Studies</Typography>\r\n                                <Typography className=\"eduCard__listItem-location\" component=\"p\">Alpena, Michigan</Typography>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"eduCard__listItem\">\r\n                            <div className=\"circleDivider\">\r\n                                <span className=\"span1\"></span>\r\n                                <span className=\"span2\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className=\"eduCard__listItem-title\" component=\"h4\">Kirtland Community</Typography>\r\n                                <Typography className=\"eduCard__listItem-title\" component=\"h4\">College</Typography>\r\n                                <Typography className=\"eduCard__listItem-date\" component=\"p\">Sept 2009 - October 2010</Typography>\r\n                                <Typography className=\"eduCard__listItem-jobTitle\" component=\"p\">Computer Science</Typography>\r\n                                <Typography className=\"eduCard__listItem-location\" component=\"p\">Roscommon, Michigan</Typography>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"eduCard__listItem\">\r\n                            <div className=\"circleDivider\">\r\n                                <span className=\"span1\"></span>\r\n                                <span className=\"span2\"></span>\r\n                            </div>\r\n                            <div>\r\n                                <Typography className=\"eduCard__listItem-title\" component=\"h4\">University of Advancing Technology</Typography>\r\n                                <Typography className=\"eduCard__listItem-date\" component=\"p\">Sept 2017 - October 2019</Typography>\r\n                                <Typography className=\"eduCard__listItem-jobTitle\" component=\"p\">Video Game Programming</Typography>\r\n                                <Typography className=\"eduCard__listItem-location\" component=\"p\">Tempe, Arizona</Typography>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\n//this is the container component that holds either the Experience card or the Education card\r\n/*\r\nPROPS LIST:\r\n    none\r\n*/\r\nconst CardExperience = (props) => {\r\n    //this state is meant to hold either the ExpContent component or the EduContent component,\r\n    const [currentContent, setCurrentContent] = useState(<ExpContent />);\r\n\r\n    //handleClick is triggered by either of the two buttons that are rendered.\r\n    const handleClick = (content) => {\r\n        switch(content) {\r\n            case 'experience':\r\n                setCurrentContent(<ExpContent />);\r\n                break;\r\n            case 'education':\r\n                setCurrentContent(<EduContent />);\r\n                break;\r\n            default:\r\n                setCurrentContent(<ExpContent />);\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"cardExperience__root\">\r\n            <ButtonGroup className=\"expCard__buttonGroup\" size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\r\n                {/*These buttons pass a string to our event handler, \r\n                    which changes this component's state depending on the string.*/}\r\n                <Button className='expCard__expButton' variant=\"contained\" onClick={(e) => handleClick('experience', e)}>My Experiences</Button>\r\n                <Button className='expCard__eduButton' variant=\"contained\" onClick={(e) => handleClick('education', e)}>My Education</Button>\r\n            </ButtonGroup>\r\n            {/*This renders the result of our currentContent state to the screen*/}\r\n            {currentContent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardExperience;","import React, {useState} from 'react';\r\nimport './CardOffer.css';\r\nimport {Typography, Card, CardContent, Icon} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/styles';\r\n\r\n//This component is a card meant to showcase what something can offer.\r\n/* \r\nPROPS LIST:\r\n    color1: The first color in the icon's gradient when you hover over the card\r\n    color2: The second color in the icon's gradient when you hover over the card\r\n    icon:   The icon to be displayed at the top of the card.  material-ui icons and fontawesome icons work.\r\n    title:  The title to be displayed under the icon.\r\n    body:   The body text that is displayed after the title\r\n*/\r\n\r\nconst CardOffer = (props) => {\r\n    //the variables are use to store the default grays in the icon's background gradient\r\n    const defaultColor1 = \"#ccc\";\r\n    const defaultColor2 = \"#eee\";\r\n    //these states store the first and second gradient color for the icon, with our\r\n    //grays being the default.\r\n    const [myColor1, setMyColor1] = useState(defaultColor1);\r\n    const [myColor2, setMyColor2] = useState(defaultColor2);\r\n    //I stored the icon's style here because it is easier to dynamically change than \r\n    //vanilla css.\r\n    const myStyles = makeStyles({\r\n        icon: {\r\n            background: `linear-gradient(0.25turn, ${myColor1}, ${myColor2})`,\r\n            fontSize: '60px',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            marginTop: '80px',\r\n        },\r\n    });\r\n    const classes = myStyles(props);\r\n    //this changes the icon's gradient color when you enter the card.\r\n    const handleMouseEnter = (event) => {\r\n        //I'm storing the color props in easy-to-access variables\r\n        let color1 = props.color1;\r\n        let color2 = props.color2;\r\n        //this runs through the first color prop, color1, and changes the first\r\n        //part of the icon's gradient based on the value\r\n        switch(color1) {\r\n            case 'pink':\r\n                setMyColor1('#F15BB5');\r\n                break;\r\n            case 'purple':\r\n                setMyColor1('#9B5DE5');\r\n                break;\r\n            case 'blue':\r\n                setMyColor1('#00BBF9');\r\n                break;\r\n            case 'green':\r\n                setMyColor1('#00F5D4');\r\n                break;\r\n            case 'yellow':\r\n                setMyColor1('#FEE440');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        //this runs through the second color prop, color2, and changes the second\r\n        //part of the icon's gradient based on the value\r\n        switch(color2) {\r\n            case 'pink':\r\n                setMyColor2('#F15BB5');\r\n                break;\r\n            case 'purple':\r\n                setMyColor2('#9B5DE5');\r\n                break;\r\n            case 'blue':\r\n                setMyColor2('#00BBF9');\r\n                break;\r\n            case 'green':\r\n                setMyColor2('#00F5D4');\r\n                break;\r\n            case 'yellow':\r\n                setMyColor2('#FEE440');\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    //this changes the icon gradient back to gray when the mouse leaves the card\r\n    const handleMouseLeave = (event) => {\r\n        setMyColor1(defaultColor1);\r\n        setMyColor2(defaultColor2);\r\n    };\r\n\r\n    return (\r\n        <Card className=\"cardOffer__root\" component=\"button\" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n            <CardContent className=\"cardOffer__cardContent\">\r\n                <Icon className={`cardOffer__icon ${classes.icon} ${props.icon}`} component=\"i\">{props.icon}</Icon>\r\n                <Typography component=\"h2\">{props.title}</Typography>\r\n                <Typography component=\"p\">{props.body}</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardOffer;","import React, {useState} from 'react';\r\nimport './CardDemo.css';\r\nimport {Card, CardMedia, Typography, Icon, Dialog, Divider, Button, AppBar, Toolbar, Slide, IconButton, makeStyles} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {Carousel, CarouselSlide} from 'material-ui-carousel';\r\n\r\n//this is the transition slide used when the dialog is displayed.  Currently we have the direction set to right.\r\n// Other acceptable directions: down, left, right, up\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"right\" ref={ref} {...props} />;\r\n  });\r\n\r\n/*\r\nPROPS LIST\r\n    image: STRING the url of the image used in the card\r\n    imageTitle: STRING the title for the image used in the card\r\n    gradientColor1: STRING (yellow, blue, green, pink, purple) the first gradient color for the overlay and for the appBar in the Dialog Box\r\n    gradientColor2: STRING (yellow, blue, green, pink, purple) the second gradient color for the overlay and for the appBar in the Dialog Box\r\n    client: STRING the title for the card, displayed under the image\r\n    subtitle: STRING the subtitle for the card, displayed under the title\r\n    description: STRING a short, one sentence description of the project\r\n    url: STRING the link to the project's website\r\n    modalImages: LIST - STRING list of references that lead to the images you want to display in the carousel\r\n    aboutProject: STRING a longer, paragraph or two description of the project, including pros and cons\r\n    technologies: LIST - STRING a list of technologies employed on the project\r\n    githubLink: STRING the link to this project's Github repo. \r\n*/\r\nconst CardDemo = (props) => {\r\n    /*our state and event handlers. \r\n        The state is used to store a boolean that will open or close our Dialog component depending on the value.\r\n        handleClickOpen and handleClickClose are used to toggle the state's value between true and false.\r\n    */\r\n    const [open, setOpen] = useState(false);\r\n    const handleClickOpen = (event) => {\r\n        setOpen(true);\r\n    };\r\n    const handleClickClose = (event) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //This sets the gradient color for the Card's overlay and for the AppBar inside the Dialog component.\r\n    //We start with gray as a default, in case no gradient is picked.\r\n    let gradientColor1 = '#888';\r\n    let gradientColor2 = '#888';\r\n    //These switch statements run through the value of the gradientColor props and update the local\r\n    //gradientColor variables accordingly\r\n    switch(props.gradientColor1) {\r\n        case 'pink':\r\n            gradientColor1 = '#F15BB5';\r\n            break;\r\n        case 'purple':\r\n            gradientColor1 = '#9B5DE5';\r\n            break;\r\n        case 'blue':\r\n            gradientColor1 = '#00BBF9';\r\n            break;\r\n        case 'green':\r\n            gradientColor1 = '#00F5D4';\r\n            break;\r\n        case 'yellow':\r\n            gradientColor1 = '#FEE440';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    switch(props.gradientColor2) {\r\n        case 'pink':\r\n            gradientColor2 = '#F15BB5';\r\n            break;\r\n        case 'purple':\r\n            gradientColor2 = '#9B5DE5';\r\n            break;\r\n        case 'blue':\r\n            gradientColor2 = '#00BBF9';\r\n            break;\r\n        case 'green':\r\n            gradientColor2 = '#00F5D4';\r\n            break;\r\n        case 'yellow':\r\n            gradientColor2 = '#FEE440';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    /*I use this makeStyles stylesheet mostly for styles that rely on props*/\r\n    const useStyles = makeStyles ({\r\n        //This class targets the Dialog component\r\n        dialogRoot: {\r\n            backgroundColor: '#202030',\r\n        },\r\n        //This class targets the gradient overlay button\r\n        overlayButton: {\r\n            backgroundImage: `linear-gradient(0.25turn, ${gradientColor1}, ${gradientColor2})`,\r\n            opacity: '0',\r\n        },\r\n        //This class targets the AppBar inside the Dialog\r\n        appBar: {\r\n            backgroundImage: `linear-gradient(0.25turn, ${gradientColor1}, ${gradientColor2})`,\r\n            position: 'fixed',\r\n        },\r\n        //This class targets the text in the AppBar, inside the Dialog component\r\n        modalTitle: {\r\n            fontSize: '24px',\r\n            fontWeight: '500',\r\n        },\r\n        //This class targets the client name in the Dialog component\r\n        modalClient: {\r\n            marginTop: '80px',\r\n            fontSize: '48px',\r\n            fontFamily: 'Raleway',\r\n            textAlign: 'center',\r\n        },\r\n        //This class targets the short description of the project in the Dialog component\r\n        modalDescription: {\r\n            textAlign: 'center',\r\n        },\r\n        \r\n        //This class targets the Github button at the bottom of the Dialog component\r\n        githubButton: {\r\n            backgroundColor: 'black',\r\n            color: 'white !important',\r\n        },\r\n    });\r\n\r\n    //This stores the list of styles I created in an easier-to-use variable\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    //This is what will be returned from this component\r\n    return(\r\n        <Card className=\"cardDemo__root\">\r\n            {/*This container holds our portfolio card*/}\r\n            <div className=\"cardDemo__cardMedia-container\">\r\n                <CardMedia \r\n                        image={props.image}\r\n                        title={props.imageTitle}\r\n                        className=\"image\"   \r\n                        />\r\n                <div className={`overlay ${classes.overlayButton}`} onClick={handleClickOpen}>\r\n                    <Icon className=\"overlay-icon\">search</Icon>\r\n                </div>\r\n\r\n                {/* This is the Dialog component that opens after clicking on a card's image*/}\r\n                <Dialog fullScreen open={open} onClose={handleClickClose} TransitionComponent={Transition} className={classes.dialogRoot}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClickClose} aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography component=\"h4\" className={classes.modalTitle}>\r\n                                {props.client}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Typography component=\"h2\" className={classes.modalClient}>{props.client}</Typography>\r\n                    <Typography component=\"h4\" className={classes.modalDescription}>{props.description}</Typography>\r\n                    {/*We are using the props.modalImages list to make a carousel of images inside the Dialog compoonent*/}\r\n                    <Carousel>\r\n                        {props.modalImages.map(({ image, title }) => (\r\n                            <CarouselSlide key={image}>\r\n                                <Card>\r\n                                    <CardMedia\r\n                                    image={image}\r\n                                    title={title}\r\n                                    style={{\r\n                                        paddingTop: '50%',\r\n                                    }}\r\n                                    className=\"carousel-img\"\r\n                                    />\r\n                                </Card>\r\n                            </CarouselSlide>\r\n                        ))}\r\n                    </Carousel>\r\n                    {/*I wrapped everything after the carousel in a container so I can size it all properly.  I didn't want \r\n                        the content to be full screen, and I wanted it all to line up with the carousel.*/}\r\n                    <div className=\"postCarouselContainer\">\r\n                        <div className=\"websiteButton\">\r\n                            <Button variant=\"contained\" \r\n                                    data-secondcolor={`var(--${props.gradientColor2})`}\r\n                                    className={`${classes.viewWebsiteButton} viewWebsiteButton`}\r\n                                    endIcon={<Icon className=\"fas fa-bolt\"></Icon>}>\r\n                                <a href={props.url}>Visit Website</a>\r\n                            </Button>\r\n                        </div>\r\n                        <Typography component=\"h3\"\r\n                                    variant=\"title\"\r\n                                    className=\"aboutProject-title\">\r\n                                        About This Project\r\n                        </Typography>\r\n                        <Divider />\r\n                        <Typography component=\"p\"\r\n                                    variant=\"body1\"\r\n                                    className=\"aboutProject-body\">\r\n                                        {props.aboutProject}\r\n                        </Typography>\r\n                        <Typography component=\"h3\"\r\n                                    variant=\"title\"\r\n                                    className=\"techSheet-title\">\r\n                                        Technical Sheet\r\n                        </Typography>\r\n                        <Typography component=\"h4\"\r\n                                    variant=\"subtitle\"\r\n                                    className=\"techSheet-subtitle\">\r\n                                    Code technologies that I got involved with while working on this project.\r\n                        </Typography>\r\n                        <Divider />\r\n                        {/*The tech sheet list is created by mapping out the technologies list from our props*/}\r\n                        <ul className=\"technologies-list\">\r\n                            {props.technologies.map((name, index) => {\r\n                                return <li key={ index }>{name}</li>;\r\n                            })}\r\n                        </ul>\r\n                        <div className=\"githubButton\">\r\n                            <Button variant=\"contained\" \r\n                                    className={`${classes.githubButton} viewGithubButton`}\r\n                                    endIcon={<Icon className=\"fab fa-github\"></Icon>}>\r\n                                <a href={props.githubLink}>Github Repo</a>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n            <Typography component=\"h2\">{props.client}</Typography>\r\n            <Typography component=\"h4\">{props.subtitle}</Typography>\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default CardDemo;","import React from 'react';\r\nimport Navbar from '../Navbar/Navbar.js';\r\nimport IntroBackground2 from '../IntroBackground/IntroBackground2.js';\r\nimport {IntroCard, IconText, IconList} from '../IntroCard/IntroCard.js';\r\nimport CardAboutMe from '../CardAboutMe/CardAboutMe.js';\r\nimport Skillbar from '../Skillbar/Skillbar.js';\r\nimport CardExperience from '../CardExperience/CardExperience.js';\r\nimport CardOffer from '../CardOffer/CardOffer.js';\r\nimport CardDemo from '../CardDemo/CardDemo.js';\r\nimport {Typography, Button, TextField, FormControl, Input} from '@material-ui/core';\r\nimport './App.css';\r\n\r\n//This component is the container for the rest of the app\r\nconst App = (props) => {\r\n    return (\r\n        <div className=\"app\"\r\n             id=\"Home\">\r\n            <Navbar className=\"app__navBar\"/>\r\n            <IntroBackground2 class=\"app__introBackground2\" \r\n                              bgColor=\"#202030\"\r\n                              color=\"blue\"\r\n                              />\r\n            {/*This is the Card containing my name, location, social media accounts, and more*/}\r\n            <IntroCard />\r\n            {/*This starts the About Me section*/}\r\n            <div className=\"app__aboutMe\"\r\n                 id=\"About\">\r\n                <Typography component=\"h2\" \r\n                            variant=\"title\"\r\n                            className=\"app__aboutMe-title\">\r\n                                About Me\r\n                </Typography>\r\n                {/*These are the cards on the left side, showcasing different soft skills*/}\r\n                <div className=\"app__aboutMe-cardContainer\">\r\n                    <CardAboutMe iconColor=\"green\"\r\n                                iconClassName=\"fa fa-users\"\r\n                                title=\"Team Player\"\r\n                                body=\"I believe that I have a lot to contribute to a team environment, \r\n                                      and am comfortable in both leadership and contributor roles. \r\n                                      I'm outgoing, friendly, and have strong communication skills.\"\r\n                                />\r\n                    <CardAboutMe iconColor=\"blue\"\r\n                                iconClassName=\"fa fa-puzzle-piece\"\r\n                                title=\"Critical Thinker\"\r\n                                body=\"I believe that critical thinking is the most important skill a \r\n                                      developer could have.  Strong critical thinking skills lead to \r\n                                      cleaner, more maintainable code.\"\r\n                                />\r\n                    <CardAboutMe iconColor=\"pink\"\r\n                                iconClassName=\"fa fa-comments-o\"\r\n                                title=\"Expert Communicator\"\r\n                                body=\"Any communication problems can lead to a drastic negative impact on\r\n                                      the project.  I pride myself on my ability to communicate issues and \r\n                                      instructions to both experienced developers and non-technical staff alike.\"\r\n                                />  \r\n                    <CardAboutMe iconColor=\"purple\"\r\n                                iconClassName=\"fa fa-graduation-cap\"\r\n                                title=\"Forever A Student\"\r\n                                body=\"As a developer, there is always something new to learn.  Thankfully,\r\n                                      I love to learn!  Not only do I love to learn, I love to teach\r\n                                      other people new things too.\"\r\n                                />\r\n                </div>\r\n                {/*These are the skill bars on the right side, showcasing hard skills*/}\r\n                <div className=\"app__aboutMe-skillbarContainer\">\r\n                    <div className=\"app__skillbar-list1\">\r\n                        <Typography component=\"h4\"\r\n                                    variant=\"subtitle\"\r\n                                    className=\"app__skillbar-title\">\r\n                                        Proficient (Used Multiple Times A Week):\r\n                        </Typography>\r\n                        <Skillbar color=\"pink\"\r\n                                skillName=\"HTML5\"\r\n                                skillValue=\"85\"\r\n                                />\r\n                        <Skillbar color=\"pink\"\r\n                                skillName=\"CSS3\"\r\n                                skillValue=\"75\"\r\n                                />\r\n                        <Skillbar color=\"pink\"\r\n                                skillName=\"React\"\r\n                                skillValue=\"70\"\r\n                                />\r\n                        <Skillbar color=\"pink\"\r\n                                skillName=\"Javascript\"\r\n                                skillValue=\"65\"\r\n                                />\r\n                        <Skillbar color=\"pink\"\r\n                                skillName=\"git/Github\"\r\n                                skillValue=\"65\"\r\n                                />\r\n                    </div>\r\n                    <div className=\"app__skillbar-list2\">\r\n                        <Typography component=\"h4\"\r\n                                    variant=\"subtitle\"\r\n                                    className=\"app__skillbar-title app__skillbar-title2\"\r\n                                    >\r\n                                        Experience With (Have Used In The Past):\r\n                        </Typography>\r\n                        <Skillbar color=\"blue\"\r\n                                skillName=\"Python\"\r\n                                skillValue=\"50\"\r\n                                />\r\n                        <Skillbar color=\"blue\"\r\n                                skillName=\"C#\"\r\n                                skillValue=\"45\"\r\n                                />\r\n                        <Skillbar color=\"blue\"\r\n                                skillName=\"PHP\"\r\n                                skillValue=\"25\"\r\n                                />\r\n                        <Skillbar color=\"blue\"\r\n                                skillName=\"SQL\"\r\n                                skillValue=\"25\"\r\n                                />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*This component consists of the My Experiences card and the My Education card*/}\r\n            <div id=\"Experience\">\r\n                <CardExperience/>\r\n            </div>\r\n            {/*This container holds the cards that showcase what I offer*/}\r\n            <div className=\"app__offer-container\">\r\n                <Typography component=\"h2\" \r\n                            variant=\"title\"\r\n                            className=\"app__offer-title\">\r\n                                What I offer\r\n                </Typography>\r\n                <div className=\"app__offer-cardContainer\">\r\n                    <CardOffer color1=\"green\"\r\n                                color2=\"blue\"\r\n                                icon=\"fa fa-wifi\"\r\n                                title=\"Front-End Web Development\"\r\n                                body=\"I have experience creating full websites for small businesses, including\r\n                                      design, development, testing, and deployment.\"\r\n                    />\r\n                    <CardOffer color1=\"pink\"\r\n                                color2=\"purple\"\r\n                                icon=\"fa fa-gamepad\"\r\n                                title=\"Video Game Programming\"\r\n                                body=\"I have created both board games and video games as a part of the curriculum\r\n                                      at the University of Advancing Technology\"\r\n                    />\r\n                    <CardOffer color1=\"yellow\"\r\n                                color2=\"green\"\r\n                                icon=\"fa fa-code\"\r\n                                title=\"Software Engineering\"\r\n                                body=\"I have experience using both C# and React Native to create software.  I do best\r\n                                      working in an Agile environment, preferably with the SCRUM framework.\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/*This is my latest projects section*/}\r\n            <div className=\"app__latestProjects-container\"\r\n                 id=\"Portfolio\">\r\n                <Typography component=\"h2\" \r\n                            variant=\"title\"\r\n                            className=\"app__latestProjects-title\">\r\n                                My Latest Projects\r\n                </Typography>\r\n                <div className=\"app__latestProjects-cardContainer\">\r\n                    <CardDemo image=\"./img/gallery/HTModal1.png\"\r\n                              imageTitle=\"Happy Tales Main Picture\"\r\n                              gradientColor1=\"purple\"\r\n                              gradientColor2=\"pink\"\r\n                              client=\"Happy Tales Pet Care\"\r\n                              subtitle=\"Small Business\"\r\n                              description=\"A small business specializing in pet care.\"\r\n                              url=\"http://www.happytalespetcare.com\"\r\n                              modalImages={[{image : \"./img/gallery/HTModal1.png\", title : \"Demo Image for Happy Tales Website\"},\r\n                                            {image : \"./img/gallery/HTModal2.jpg\", title : \"Demo Image for Happy Tales Website\"}, \r\n                                            {image : \"./img/gallery/HTModal3.png\", title : \"Demo Image for Happy Tales Website\"},\r\n                                            {image : \"./img/gallery/HTModal4.jpg\", title : \"Demo Image for Happy Tales Website\"}]}\r\n                              aboutProject=\"Happy Tales Pet Care provides numerous pet-related services to their local area. This\r\n                                            is a custom website written in HTML5 and Javascript, with Bootstrap as the framework.\"\r\n                              technologies={[\"Javascript\", \"HTML\", \"CSS3\", \"ScrollMagic\", \"Bootstrap\", \"GSAP\", \"git\", \"Github\"]}\r\n                              githubLink=\"https://github.com/grimsleynate/grimsleynate.github.io\"\r\n                    />\r\n                    <CardDemo image=\"./img/gallery/BDCMain.jpg\"\r\n                              imageTitle=\"Bear Den Cottages Main Page\"\r\n                              gradientColor1=\"green\"\r\n                              gradientColor2=\"yellow\"\r\n                              client=\"Bear Den Cottages\"\r\n                              subtitle=\"Vacation Cabin Rentals\"\r\n                              description=\"Vacation cabin rentals in Houghton Lake, Michigan\"\r\n                              url=\"https://www.beardencottages.com\"\r\n                              modalImages={[{image : \"./img/gallery/BDCModal1.png\", title : \"Demo Image for Bear Den Cottages Website\"},\r\n                                            {image : \"./img/gallery/BDCModal2.png\", title : \"Demo Image for Bear Den Cottages Website\"},\r\n                                            {image : \"./img/gallery/BDCModal3.png\", title : \"Demo Image for Bear Den Cottages Website\"}, \r\n                                            {image : \"./img/gallery/BDCModal4.png\", title : \"Demo Image for Bear Den Cottages Website\"}]}\r\n                              aboutProject=\"Bear Den Cottages provides rental cabins in the Houghton Lake Area.  This website was built in Wordpress using PHP and Javascript.\"\r\n                              technologies={[\"Javascript\", \"PHP\", \"CSS3\", \"Wordpress\"]}\r\n                              githubLink=\"https://www.beardencottages.com\"\r\n                    />\r\n                    <CardDemo image=\"./img/gallery/PModal1.png\"\r\n                              imageTitle=\"Portfolio Main Page\"\r\n                              gradientColor1=\"green\"\r\n                              gradientColor2=\"blue\"\r\n                              client=\"Nathaniel Grimsley\"\r\n                              subtitle=\"Front-End Web Developer\"\r\n                              description=\"A website created for a web developer.\"\r\n                              url=\"https://www.nathanielgrimsley.com\"\r\n                              modalImages={[{image : \"./img/gallery/PModal1.png\", title : \"Demo Image for Nathaniel Grimsley's Portfolio\"},\r\n                                            {image : \"./img/gallery/PModal2.png\", title : \"Demo Image for Nathaniel Grimsley's Portfolio\"},\r\n                                            {image : \"./img/gallery/PModal3.png\", title : \"Demo Image for Nathaniel Grimsley's Portfolio\"}, \r\n                                            {image : \"./img/gallery/PModal4.png\", title : \"Demo Image for Nathaniel Grimsley's Portfolio\"}]}\r\n                              aboutProject=\"This website is used to showcase projects created by Nathaniel Grimsley.  This is a custom website created using React and CSS3, with the Material-UI framework.\"\r\n                              technologies={[\"Javascript\", \"React\", \"CSS3\", \"HTML5\", \"Material-UI\", \"Anime.js\", \"git\", \"Github\"]}\r\n                              githubLink=\"https://github.com/grimsleynate/Web-Development-Portfolio\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/*This is my contact form*/}\r\n            <div className=\"app__contact-container\"\r\n                 id=\"Contact\">\r\n                {/*This is the title and the subtitle for the contact form*/}\r\n                <Typography variant=\"title\" \r\n                            component=\"h3\"\r\n                            className=\"app__contact-title\">\r\n                                Contact Me\r\n                </Typography>\r\n                <Typography variant=\"subtitle\" \r\n                            component=\"h4\"\r\n                            className=\"app__contact-subtitle\">\r\n                                If you have an questions or comments, I would love to hear them!\r\n                </Typography>\r\n                {/*This holds all of the contact area, except for the title and subtitle */}\r\n                <div className=\"app__contact-masterContainer\">\r\n                    {/*This container holds all of the icon/text combos*/}\r\n                    <div className=\"app__contact-iconTextContainer\">\r\n                        <IconText icon=\"room\"\r\n                                  text=\"Lansing, Michigan\"\r\n                        />\r\n                        <Typography component=\"p\"\r\n                                    variant=\"subtitle\"\r\n                                    className=\"app__contact-iconTextSubtitle\">\r\n                                        48906\r\n                        </Typography>\r\n                        <IconText icon=\"phone\"\r\n                                  text=\"(989)217-6087\"\r\n                        />\r\n                        <Typography component=\"p\"\r\n                                    variant=\"subtitle\"\r\n                                    className=\"app__contact-iconTextSubtitle\">\r\n                                        Mon thru Fri, 8:00 AM - 6:00 PM\r\n                        </Typography>\r\n                        <IconText icon=\"email\"\r\n                                  text=\"grimsleynate@gmail.com\"\r\n                        />\r\n                        <Typography component=\"p\"\r\n                                    variant=\"subtitle\"\r\n                                    className=\"app__contact-iconTextSubtitle\">\r\n                                        Send me your questions any time!\r\n                        </Typography>\r\n                    </div>\r\n                    {/*This container holds our actual form*/}\r\n                    <div className=\"app__contact-formContainer\">\r\n                        {/*I'm using formspree to handle my form instead of building out a form handler myself*/}\r\n                        <form action=\"https://formspree.io/mdowlnja\" method=\"POST\">\r\n                            {/*I divied my form up into seperate containers so that I can easily use flexbox to\r\n                                move and position the different elements*/}\r\n                            <div className=\"app__contact-formControl\">\r\n                                {/*This container holds the name, email, and subject inputs*/}\r\n                                <div className=\"app__contact-formControl1\">\r\n                                    <TextField placeholder=\"Jane Doe\" \r\n                                        name=\"Name\"\r\n                                        label=\"Name\"\r\n                                        inputProps={{ 'aria-label': 'description' }} \r\n                                        variant=\"outlined\"\r\n                                        className=\"app__contact-input\"\r\n                                    />\r\n                                    <TextField placeholder=\"janedoe@example.com\" \r\n                                        name=\"Email\"\r\n                                        label=\"Email\"\r\n                                        inputProps={{ 'aria-label': 'description' }}\r\n                                        variant=\"outlined\"\r\n                                        className=\"app__contact-input\"  \r\n                                    />\r\n                                    <TextField placeholder=\"Requesting A Quote\" \r\n                                        name=\"Subject\"\r\n                                        label=\"Subject\"\r\n                                        inputProps={{ 'aria-label': 'description' }}  \r\n                                        variant=\"outlined\"\r\n                                        className=\"app__contact-input\"\r\n                                    />\r\n                                </div>\r\n                                {/*This container stores the Message input and the submit button*/}\r\n                                <div className=\"app__contact-formControl2\">\r\n                                    <TextField placeholder=\"Message Text\" \r\n                                               name=\"Message\"\r\n                                               label=\"Message\"\r\n                                               inputProps={{ 'aria-label': 'description' }}\r\n                                               multiline\r\n                                               rows={7}\r\n                                               variant=\"outlined\"\r\n                                               className=\"app__contact-input\"  \r\n                                    />\r\n                                    <Button type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            className=\"app__contact-button\">\r\n                                                Send Message\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*This starts our footer section*/}\r\n            <div className=\"app__footer-container\">\r\n                {/*This container holds the contact portion of the footer*/}\r\n                <div className=\"app__footer-contact\">\r\n                    <Typography className=\"app__footer-contactTitle\"\r\n                                component=\"h4\"\r\n                                variant=\"title\">\r\n                                    Contact\r\n                    </Typography>\r\n                    <Typography className=\"app__footer-contactSubtitle\"\r\n                                component=\"h4\"\r\n                                variant=\"subtitle\">\r\n                                    Like what you see? You can contact me through email\r\n                                    at grimsleynate@gmail.com or through phone at \r\n                                    1(989)217-6087\r\n                    </Typography>\r\n                </div>\r\n                {/*This container holds the social media portion of the footer */}\r\n                <div className=\"app__footer-social\">\r\n                    <Typography className=\"app__footer-socialTitle\"\r\n                                component=\"h4\"\r\n                                variant=\"title\">\r\n                                    Follow Me\r\n                    </Typography>\r\n                    <Typography className=\"app__footer-socialSubtitle\"\r\n                                component=\"h4\"\r\n                                variant=\"subtitle\">\r\n                                    Let's be social!\r\n                    </Typography>\r\n                    <div className=\"app__contact-socialMediaButtons\">\r\n                        <IconList />\r\n                    </div>\r\n                </div>\r\n                {/*This container holds the copyright portion of the footer*/}\r\n                <div className=\"app__footer-copyright\">\r\n                    <div className=\"copyright-container\">\r\n                    <Typography className=\"app__footer-copyrightText\"\r\n                                component=\"p\"\r\n                                variant=\"body\">\r\n                                    Copyright © 2020 All rights reserved | <a href=\"www.github.com/grimsleynate\">Nathaniel Grimsley</a>\r\n                    </Typography>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App.js';\r\nimport 'typeface-roboto';\r\nimport 'typeface-raleway';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}